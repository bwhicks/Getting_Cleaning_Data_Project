download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv,'ACS-2006.csv',method='curl')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv,'ACS-2006.csv',method='curl')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv','ACS-2006.csv',method='curl')
data <- read.csv('ACS-2006.csv',TRUE)
head(data)
count()
install.packages('plyr')
load('plyr')
load.package('plyr')
library('plyr')
data <- data[:which(data$ST==16 & data$VAL=24)]
data <- data[which(data$ST==16 & data$VAL=24)]
data <- data[which(data$ST==16 & data$VAL==24)]
df <- as.data.frame(data)
dfsub <- df[which(data$ST==16 & data$VAL==24)]
head(dfsub)
head(df)
dfsub <- df[which(df$ST==16 & df$VAL==24)]
df$ST
dfsub <- df[which(df$ST == 16 & df$VAL == 24)]
dfsub <- df[which(df$ST == 16),]
dfsub <- df[which(df$ST == 16 df$VAL ==24),]
dfsub <- df[which(df$ST == 16 df$VAL == 24),]
dfsub <- df[which(df$ST == 16 & df$VAL == 24),]
install.packages("xlsx")
library(xlsx)
install.packages("rJava",type='source')
install.packages("rJava", type = "source")
install.packages("xlsx")
library(xlsx)
library(xlsx)
install.packages("rJava", type = "source")
library(xlsx)
remove.packages(rJava)
remove.packages('rJava')
library(xlsx)
install.packages("xlsx")
library(xlsx)
install.packages("rJava", type = "source")
library(xlsx)
file.download("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx","excelfile.xlsx",'curl')
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx","excelfile.xlsx",'curl')
dat <- read.xlsx('excelfile.xlsx','0',rowIndex=18:23,colIndex=7:15)
dat <- read.xlsx('excelfile.xlsx','',rowIndex=18:23,colIndex=7:15)
dat <- read.xlsx('excelfile.xlsx',0,rowIndex=18:23,colIndex=7:15)
dat <- read.xlsx('excelfile.xlsx',1,rowIndex=18:23,colIndex=7:15)
sum(dat$Zip*dat$Ext,na.rm=T)
installed.package('XML')
install.package('XML')
install.packages('XML')
library('XML')
filUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParser(fileUrl, useInternal=TRUE)
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
doc <- xmlTreeParse(filUrl, useInternal=TRUE)
download.file(filUrl, 'download.xml', method='curl')
doc <- xmlTreeParse('download.xml', useInternal=TRUE)
rootNode <- xmlRoot(doc)
library('XML',node[@zipcode='21231'],xmlValue)
library('XML',rootNode[@zipcode='21231'],xmlValue)
xpathSApply(rootNode,"node[@zipcode='21231'",xmlValue)
xpathSApply(rootNode,"rootNode[@zipcode='21231'",xmlValue)
xpathSApply(rootNode,"//zipcode",xmlValue)
zipvector <- xpathSApply(rootNode,"//zipcode",xmlValue)
wanted <- function(x) {}
wanted <- function(x) {if (x=21231) return(TRUE) else return(FALSE)}
wanted <- function(x) {if (x==21231) return(TRUE) else return(FALSE)}
filter(zipvector,wanted)
filter(wanted, zipvector)
wanted <- function(x) {if (x=="21231") return(TRUE) else return(FALSE)}
wanted
filter(zipvector,wanted)
filter(wanted, zipvector)
zipvector <- xpathSApply(rootNode,"//zipcode==21231",xmlValue)
zipvector <- xpathSApply(rootNode,"//zipcode=21231",xmlValue)
zipvector
zipvector <- xpathSApply(rootNode,"//zipcode",xmlValue)
zipvector
subsetted <- subset(zipvector, x=="21231")
subsetted <- subset(zipvector, zipvector=="21231")
subsetted
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv","ACS-2006-2.csv","curl")
install.packages(data.table)
install.packages("data.table)
install.packages("data.table")
library("data.table")
csv <- fread("ACS-2006-2.csv")
DT <- fread("ACS-2006-2.csv")
DT[,mean(pwgtp15),by=SEX]
?lm
R_ehom
R_HOME
.Library
install.packages('GenABEL')
install.packages('car')
?avPlots
?avPlots
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv', 'ACS2006data.csv',method='curl')
ACS-csv <- load.csv('ASC2006data.csv')
ACS-csv <- read.csv('ASC2006data.csv')
ACS-csv <- read.csv('ACS2006data.csv')
read.csv('ACS2006data.csv')
ACS.data <- read.csv('ACS2006data.csv')
agricultureLogical <- ACS.data[ACS.data$ACR==3 & ACS.data$AGS==6]
agricultureLogical <- ACS.data[,ACS.data$ACR==3 & ACS.data$AGS==6]
ACS.data[ACR]
ACS.data['ACR']
agricultureLogical <- ACS.data['ACR'==3 & 'AGS'==6]
agricultureLogical <- ACS.data['ACR'=='3' & 'AGS'=='6']
View(agricultureLogical)
View(agricultureLogical)
View(agricultureLogical)
agricultureLogical <- ACS.data['ACR'='3' & 'AGS'='6']
agricultureLogical <- ACS.data['ACR' == 3 & AGS == 6]
df <- data.frame(ACS.data)
agricultureLogical <- df[df$ACR == 3 & df$AGS == 6]
agricultureLogical <- df[df$ACR == 3 & df$AGS == 6,]
which(agricultureLogical)
agricultureLogical <- logical(agricultureLogical)
View(as.logical(agricultureLogical)
:
which(as.logical(agricultureLogical))
agricultureLogical <- df[df$ACR == 3 & df$AGS == 6,]
which(with(df, TYPE == 1 & ACR == 3 & AGS == 6))
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg', 'goob.jpg', 'curl')
install.packages(jpeg)
install.packages('jpeg')
library(jpeg)
?jpeg
read.jpeg
jpeg
goob <- readJPEG('goob.jpg', native = TRUE)
goob
head(goob)
quantile(goob,prob=c(0.3,0.8))
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv', 'GDP.csv', 'curl')
read.csv('GDP.csv')
df <- read.csv('GDP.csv')
df
GDP <- df
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv', 'EDU.csv', 'curl')
EDU <- read.csv('EDU.csv')
install.packages('dplyr')
head(GDP)
head(EDU)
library('dplyr')
library('plyr')
?join
summary(GPD)
summary(GDP)
View(df)
colname(GDP)[1] <- "country_code"
colnames(GDP)[1] <- "country_code"
View(GDP)
View(GDP)
View(EDU)
View(EDU)
colnames(EDU)[1] <- "country_code"
join(GDP, EDU, by = "country_code")
merged <- join(GDP, EDU, by = "country_code")
merged <- intersect(GDP,EDU)
merged <- intersect(GDP,EDU,all=TRUE)
merged <- merge(GDP,EDU,by.x='country_code',by.y='country_code',all=TRUE)
View(merged)
View(merged)
View(merged)
merged <- merge(GDP, EDU,by='country_code')
sorted <- merged[order(merged$Gross.domestic.product.2012, decreasing=TRUE)]
sorted <- merged[order(merged$Gross.domestic.product.2012, decreasing=TRUE)]
names(merged)
sorted <- merged[order(merged$Gross.domestic.product.2012, decreasing=TRUE)]
?order
sorted <- merged[order(merged$Gross.domestic.product.2012, decreasing = TRUE)]
sorted <- merged[,order(merged$Gross.domestic.product.2012, decreasing = TRUE)]
sorted <- merged[order(merged$Gross.domestic.product.2012, decreasing = TRUE),]
View(sorted)
View(sorted)
head(sorted$Gross.domestic.product.2012)
head(sorted)
sorted[,13]
sorted[,1]
View(GDP)
merged <- merge(EDU, GDP,by='country_code')
head(GDP)
View(GDP)
View(GDP)
GDP <- GDP[5:,]
GDP <- GDP[5:235,]
View(GDP)
View(GDP)
View(GDP)
View(GDP)
merged <- merge(GDP, EDU,by='country_code')
merged
sorted <- merged[order(merged$Gross.domestic.product.2012, decreasing = TRUE),]
sorted[13,1]
merged <- merged[merged$Gross.domestic.product.2012 > 0]
merged <- merged[merged$Gross.domestic.product.2012 != NULL]
merged(225,2)
merged[225,2]
merged <- merge(GDP, EDU,by='country_code',all=FALSE)
merged
merged <- merged[,is.nan(merged$Gross.domestic.product.2012)]
merged
merged <- merge(GDP, EDU,by='country_code')
merged <- merged[,!is.nan(merged$Gross.domestic.product.2012)]
merged <- merged[!is.nan(merged$Gross.domestic.product.2012)]
merged <- merged[!is.nan(merged$Gross.domestic.product.2012),]
merged
View(sorted)
View(sorted)
merged <- merged[!is.null(merged$Gross.domestic.product.2012),]
merged
getwd()
setwd('~/Downloads/UCI HAR Dataset/')
train.df <- data.frame(read.csv('train/X_train.txt'), read.csv('/train/subject_train'), read.csv('train/y_train.txt'))
train.df <- data.frame(read.csv('train/X_train.txt'), read.csv('/train/subject_train.txt'), read.csv('train/y_train.txt'))
train.df <- data.frame(read.table('train/X_train.txt'), read.table('train/subject_train.txt'), read.table('train/y_train.txt'))
View(train.df)
View(train.df)
View(train.df)
train.df <- data.frame(read.table('train/subject_train.txt'), read.table('train/y_train.txt'), read.table('train/X_train.txt'))
View(train.df)
View(train.df)
source('~/Downloads/UCI HAR Dataset/draft_analysis.R', encoding = 'UTF-8')
train.df
View(train.df)
View(train.df)
X_train.df <- data.frame(read.table('train/X_train.txt'))
obnames.df <- data.frame(read.table('features.txt'))
View(X_train.df)
View(X_train.df)
obnames.df <- data.frame(read.table('features.txt'))
View(obnames.df)
View(obnames.df)
obnames.wanted <- grep('mean()|std()',obnames.df$V2)
obnames.wanted
obnames.wanted <- grep('mean()|std()',obnames.df$V2, value=TRUE)
#Slurp in observation names
obnames.df <- data.frame(read.table('features.txt'))
index.wanted <- grep('mean()|std()',obnames.df[2])
names.wanted <- grep('mean()|std()',obnames.df[2], value=TRUE)
#Grab in the observation data frame
X.df <- data.frame(read.table('train/X_train.txt'))
#Subset with the index
X.subset <- data.frame[,index.wanted]
colnames(X.subset) <- names.wanted
#Slurp in observation names
obnames.df <- data.frame(read.table('features.txt'))
index.wanted <- grep('mean()|std()',obnames.df[2])
names.wanted <- grep('mean()|std()',obnames.df[2], value=TRUE)
#Grab in the observation data frame
X.df <- data.frame(read.table('train/X_train.txt'))
#Subset with the index
X.meanstd <- data.frame[,index.wanted]
colnames(X.meanstd) <- names.wanted
#Slurp in observation names
obnames.df <- data.frame(read.table('features.txt'))
index.wanted <- grep('mean()|std()',obnames.df[2])
names.wanted <- grep('mean()|std()',obnames.df[2], value=TRUE)
#Grab in the observation data frame
X.df <- data.frame(read.table('train/X_train.txt'))
#Subset with the index
X.meanstd <- X.df[,index.wanted]
colnames(X.meanstd) <- names.wanted
View(X.meanstd)
View(X.meanstd)
View(X.meanstd)
View(X.meanstd)
#Slurp in observation names
obnames.df <- data.frame(read.table('features.txt'))
index.wanted <- grep('mean()|std()',obnames.df[,2])
names.wanted <- grep('mean()|std()',obnames.df[,2], value=TRUE)
#Grab in the observation data frame
X.df <- data.frame(read.table('train/X_train.txt'))
#Subset with the index
X.meanstd <- X.df[,index.wanted]
colnames(X.meanstd) <- names.wanted
View(X.meanstd)
import_subset <- function (filename) {
#Slurp in observation names
obnames.df <- data.frame(read.table('features.txt'))
index.wanted <- grep('mean()|std()',obnames.df[,2])
names.wanted <- grep('mean()|std()',obnames.df[,2], value=TRUE)
#Grab in the observation data frame
df <- data.frame(read.table(filename))
#Subset with the index
df.meanstd <- df[,index.wanted]
colnames(df.meanstd) <- names.wanted
return(df.meanstd)
}
X.meanstd <-import_subset('train/X_train.txt')
import_subset <- function (filename) {
#Slurp in observation names
obnames.df <- data.frame(read.table('features.txt'))
index.wanted <- grep('mean()|std()',obnames.df[,2])
names.wanted <- grep('mean()|std()',obnames.df[,2], value=TRUE)
#Grab in the observation data frame
df <- data.frame(read.table(filename))
#Subset with the index
df.meanstd <- df[,index.wanted]
colnames(df.meanstd) <- names.wanted
return(df.meanstd)
}
X.meanstd <-import_subset('train/X_train.txt')
append_tasks_people <- function(obs.df, yfile, taskfile) {
df(yfile, taskfile)
colnames(df) <- c('Subject', 'Task')
df$Subject <- sapply(df$Subject, switch,
1 = 'Walking',
2 = 'Walking Upstairs',
3 = 'Walking Downstairs',
4 = 'Sitting',
5 = 'Standing',
6 = 'Laying')
obs.df$Subject <- df$Subject
obs.df$Task <- df$Task
return(obs.df)
}
append_tasks_people <- function(obs.df, yfile, subject_file) {
df <- data.frame(read.table(subject_file), read.table(yfile))
colnames(df) <- c('Subject', 'Task')
df$Task <- sapply(df$Subject, switch,
1 = 'Walking',
2 = 'Walking Upstairs',
3 = 'Walking Downstairs',
4 = 'Sitting',
5 = 'Standing',
6 = 'Laying')
obs.df$Subject <- df$Subject
obs.df$Task <- df$Task
return(obs.df)
}
install.packages('switch')
library('switch')
switch
append_tasks_people <- function(obs.df, yfile, subject_file) {
df <- data.frame(read.table(subject_file), read.table(yfile))
colnames(df) <- c('Subject', 'Task')
activity_names <- function(x) {
switch(x,
1 = 'Walking',
2 = 'Walking Upstairs',
3 = 'Walking Downstairs',
4 = 'Sitting',
5 = 'Standing',
6 = 'Laying')
return(x)
}
df$Task <- sapply(df$Task, activity_names)
obs.df$Subject <- df$Subject
obs.df$Task <- df$Task
return(obs.df)
}
append_tasks_people <- function(obs.df, yfile, subject_file) {
df <- data.frame(read.table(subject_file), read.table(yfile))
colnames(df) <- c('Subject', 'Task')
activity_names <- function(x) {
switch(x,
1 = 'Walking',
2 = 'Walking Upstairs',
3 = 'Walking Downstairs',
4 = 'Sitting',
5 = 'Standing',
6 = 'Laying')
return(x)
}
df$Task <- sapply(df$Task, activity_names)
obs.df$Subject <- df$Subject
obs.df$Task <- df$Task
return(obs.df)
}
jk
append_tasks_people(X.meanstd, 'train/y_train.txt', 'train/subject_train.txt')
append_tasks_people(X.meanstd, 'train/y_train.txt', 'train/subject_train.txt')
append_taskspeople(X.meanstd, 'train/y_train.txt', 'train/subject_train.txt')
return(obsdf)
append_taskspeople <- function (obsdf, yfile, subject_file) {
df <- data.frame(read.table(subject_file), read.table(yfile))
colnames(df) <- c('Subject', 'Task')
activity_names <- function(x) {
switch(x,
1 = 'Walking',
2 = 'Walking Upstairs',
3 = 'Walking Downstairs',
4 = 'Sitting',
5 = 'Standing',
6 = 'Laying')
return(x)
}
df$Task <- sapply(df$Task, activity_names)
obsdf$Subject <- df$Subject
obsdf$Task <- df$Task
return(obsdf)
}
import_subset <- function (obsfile) {
:
#Slurp in observation names
df <- data.frame(read.table(obsfile))
setwd('~/Downloads/UCI HAR Dataset/')
X.meanstd <- import_subset('train/X_train.txt')
import_subset <- function (obsfile) {
:
#Slurp in observation names
source('draft_analysis.R')
source('draft_analysis.R')
View(X.meanstd)
source('draft_analysis.R')
View(X_train)
source('draft_analysis.R')
source('draft_analysis.R')
View(X_train)
source('draft_analysis.R')
View(X_train)
source('draft_analysis.R')
View(X_train)
View(X_train)
source('draft_analysis.R')
View(X_test)
View(X_train)
source('draft_analysis.R')
source('draft_analysis.R')
View(fulldf)
source('draft_analysis.R')
View(fulldf)
View(X_test)
View(X_train)
View(X_test)
source('draft_analysis.R')
View(fulldf)
View(fulldf)
source('draft_analysis.R')
source('draft_analysis.R')
View(fulldf)
View(fulldf)
source('draft_analysis.R')
View(fulldf)
View(fulldf)
source('draft_analysis.R')
View(fulldf)
View(fulldf)
View(fulldf)
source('draft_analysis.R')
View(fulldf)
View(fulldf)
source('draft_analysis.R')
source('draft_analysis.R')
source('draft_analysis.R')
View(fulldf)
View(fulldf)
fulldf <- sapply(fulldf$Task, function(x) {}
)
source('draft_analysis.R')
View(fulldf)
View(fulldf)
View(fulldf)
source('draft_analysis.R')
View(fulldf)
View(fulldf)
source('draft_analysis.R')
View(fulldf)
View(fulldf)
aggregated <- aggregate(fulld[,-c(1:2), by = list(fulldf$Subject, full$dfTask), mean)
aggregated <- aggregate(fulld[,-c(1:2)], by = list(fulldf$Subject, full$dfTask), mean)
aggregated <- aggregate(fulldf[,-c(1:2)], by = list(fulldf$Subject, full$dfTask), mean)
aggregated <- aggregate(fulldf[,-c(1:2)], by = list(fulldf$Subject, fulldf$Task), mean)
View(aggregated)
View(aggregated)
install.packages('reshape')
library('reshape')
library('reshape2')
melt
source('draft_analysis.R')
source('draft_analysis.R')
